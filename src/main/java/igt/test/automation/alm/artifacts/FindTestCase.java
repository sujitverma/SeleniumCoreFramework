package igt.test.automation.alm.artifacts;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import igt.test.automation.alm.functionlibrary.ALMCookiesHeaders;
import igt.test.automation.alm.functionlibrary.ALMLogin;
import igt.test.automation.alm.functionlibrary.APIManager;
import igt.test.automation.alm.response.pojo.Entity;
import igt.test.automation.util.ApiUtil;
import io.restassured.response.Response;

/** class to find the test case and return it subtype. */
public class FindTestCase {

    /** The Log4j logger. */
    private static final Logger LOG = LogManager.getLogger(FindTestCase.class);

    /**
     * Function to get the Test case subtype which will use for creating Test
     * Instance and Test Run.
     * 
     * @param almLoginObject
     *            - ALMLoginObject contains the ALM host, username, password,
     *            domain, project information
     * @param almCookieHeader
     *            - ALMCookiesHeaders Object which contains the Map of Cookies
     *            and Headers and generated by ALM Sign In
     * @param testCaseId
     *            - ALM test case id
     * @return Test case Subtype Id
     * 
     * @author 
     */
    public String getTestCaseSubTypeIdValue(final ALMLogin almLoginObject,
            final ALMCookiesHeaders almCookieHeader, final String testCaseId) {
        String subTypeId = null;
        try {
            String url = almLoginObject.getHost() + "/rest/domains/"
                    + almLoginObject.getDomain() + "/projects/"
                    + almLoginObject.getProject() + "/tests/" + testCaseId;
            Response tcResponse = ApiUtil.getRequest(url,
                    almCookieHeader.getHeaders(), almCookieHeader.getCookies());
            Entity tcEntityResponse = (Entity) APIManager
                    .convertFromJson(tcResponse.asString(), Entity.class);
            List<igt.test.automation.alm.response.pojo.Field> fieldsListObject = tcEntityResponse
                    .getFields();
            for (igt.test.automation.alm.response.pojo.Field field : fieldsListObject) {
                if ("subtype-id".equals(field.getName())) {
                    subTypeId = field.getValues().get(0).getValue();
                    break;
                }
            }
        } catch (Exception e) {
            LOG.error("Exception while finding Test Case SubType : "
                    + e);
        }
        return subTypeId;
    }

}
