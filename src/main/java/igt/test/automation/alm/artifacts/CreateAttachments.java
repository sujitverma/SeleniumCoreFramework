package igt.test.automation.alm.artifacts;

import java.util.HashMap;
import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import igt.test.automation.alm.functionlibrary.ALMCookiesHeaders;
import io.restassured.RestAssured;
import io.restassured.config.EncoderConfig;
import io.restassured.config.RestAssuredConfig;
import io.restassured.http.ContentType;
import io.restassured.response.Response;

/** Perform attachment in ALM. */
public class CreateAttachments {

    /** The Log4j logger. */
    private static final Logger LOG = LogManager
            .getLogger(CreateAttachments.class);

    /**
     * Perform Attachment to ALM using <code>almCookieHeaders</code>,
     * <code>url</code>, <code>filecontent</code>, <code>filename</code> and
     * <code>description</code>.
     * 
     * @param almCookieHeaders
     *            - ALMCookiesHeaders Object which contains the Map of Cookies
     *            and Headers and generated by ALM Sign In.
     * @param url
     *            - ALM rest URL which combine ALM host, Domain, project &
     *            artifacts.
     * @param filecontent
     *            - File content which need to be attach.
     * @param filename
     *            - It save attachment with this file name in ALM.
     * @param description
     *            - Any description while attaching any text file to alm.
     * @return RestAssured Response Object.
     * 
     * @author 
     */
    public Response createAttachmentRequest(
            final ALMCookiesHeaders almCookieHeaders, final String url,
            final String filecontent, final String filename,
            final String description) {
        Response response = null;
        try {
            Map<String, String> formDataMap = new HashMap<>();
            formDataMap.put("description", description);
            formDataMap.put("filename", filename);
            formDataMap.put("file", filecontent);

            Map<String, String> newHeaderMap = new HashMap<>();
            newHeaderMap.put("Content-Type", "multipart/form-data");
            newHeaderMap.put("Accept", "application/json");

            EncoderConfig encoderConfig = new EncoderConfig();
            RestAssured.config = new RestAssuredConfig().encoderConfig(
                    encoderConfig.encodeContentTypeAs("multipart/form-data",
                            ContentType.TEXT));
            LOG.info(almCookieHeaders.getHeaders());

            response = RestAssured.given()
                    .cookies(almCookieHeaders.getCookies())
                    .headers(newHeaderMap).formParams(formDataMap)
                    .multiPart("file2", filecontent).post(url).then().extract()
                    .response();
        } catch (Exception e) {
            LOG.error("Request expection : " + e);
        }
        return response;
    }
}
